#!/bin/bash

set -e

function show_help() {
  echo "Usage: git branch-pack [-h] [-a] <branch names>"
  echo "    -h: show help"
  echo "    -a: pack all of branches (ignore following branch names)"
}

function copy_tracked_files_to() {
  base_dir=$1

  for file in $(git ls-files)
  do
    dir="${base_dir}/$(dirname $file)"
    if [ ! -d $dir ] ; then
      mkdir -p $dir
    fi

    cp $file $dir
  done
}

function make_package_dir() {
  base_dir=$1
  while :
  do
    if [ ! -d $base_dir ] ; then
      mkdir $base_dir
      break
    fi
    base_dir="${base_dir}_"
  done
}

function pack_branches() {
  branches=($@)

  project_prefix=$(basename `git rev-parse --show-toplevel`)

  git stash > /dev/null 2>&1
  original_branch=$(git branch -a | grep '^*' | sed -e 's/^* //')

  for branch in "${branches[@]}"
  do
    git checkout $branch > /dev/null 2>&1

    base_dir="${project_prefix}_${branch}"
    make_package_dir $base_dir

    copy_tracked_files_to $base_dir
  done

  git checkout $original_branch > /dev/null 2>&1
  git stash pop > /dev/null 2>&1
}

function pack_all_branches() {
  IFS=$'\n'

  branches=()
  for line in `git branch`
  do
    branch=$(echo $line | sed -e 's/^[ \*]*//') # remove unnecessary prefix
    branches=("${branches[@]}" "$branch")
  done

  pack_branches ${branches[@]}
}

while getopts ah opt
do
  case $opt in
    "a" ) all_flug="TRUE" ;;
    "h" ) help_flug="TRUE" ;;
      * ) show_help
          exit 1 ;;
  esac
done

if [ "$help_flug" = "TRUE" ] ; then
  show_help
  exit 0
fi

if [ "$all_flug" = "TRUE" ] ; then
  pack_all_branches
  exit 0
fi

if [ $# -lt 1 ] ; then
  echo "Too few arguments"
  show_help
  exit 1
fi

pack_branches $@
